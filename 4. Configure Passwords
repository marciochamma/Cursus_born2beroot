Configuring SUDO

Create folder to archive the sudo inputs and outputs.
# mkdir /var/log/sudo (folder name = sudo)

Create and edit file with instructions about sudo passwords
# vim /etc/sudoers.d/sudo_config (create and edit file sudo_config)

Project Resquest Rules for Sudo Passwords

[Proj Request] : Authentication using sudo has to be limited to 3 attempts in the event of an incorrect password
# Defaults  passwd_tries=3

[Proj Request] : A custom message of your choice has to be displayed if an error due to a wrong password occurs when using sudo.
# Defaults  badpass_message="Errrrrroooouu"

[Proj Request] : Each action using sudo has to be archived, both inputs and outputs. The log file has to be saved in the /var/log/sudo/ folder.
# Defaults  logfile="/var/log/sudo/sudo_config"
# Defaults  log_input, log_output
# Defaults  iolog_dir="/var/log/sudo"

[Proj Request] : The TTY mode has to be enabled for security reasons.
(sudo only run when the user is logged in to a real terminal. When this flag is set, sudo can only be run from a login session and not via other means such as cron or cgi-bin scripts. TTY = Terminal = Tele-Type-Writer)
# Defaults  requiretty

[Proj Request] : For security reasons too, the paths that can be used by sudo must be restricted. Example: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
# Defaults secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"

## File : sudo_config
Defaults passwd_tries=3
Defaults badpass_message="Errrrrroooouu"
Defaults logfile="/var/log/sudo/sudo_config"
Defaults log_input, log_output
Defaults iolog_dir="/var/log/sudo"
Defaults requiretty
Defaults secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"


Configuring Strong Password

In order to meet project resquest, two files must be adjusted

File 1 : login.defs
# vim /etc/login.defs (edit file login.defs)

In the session of Password aging controls

[Proj Request] : Your password has to expire every 30 days.
# PASS_MAX_DAYS 99999 -> # PASS_MAX_DAYS 30

[Proj Request] : The minimum number of days allowed before the modification of a password will
be set to 2.
# PASS_MIN_DAYS 0 -> # PASS_MIN_DAYS 2

[Proj Request] : The user has to receive a warning message 7 days before their password expires.
# PASS_WARN_AGE 7 -> # PASS_WARN_AGE 7 (keep the same)

## File 1 : login.defs

(...)
# Password aging controls:
#
#	PASS_MAX_DAYS	Maximum number of days a password may be used.
#	PASS_MIN_DAYS	Minimum number of days allowed between password changes.
#	PASS_WARN_AGE	Number of days warning given before a password expires.
#
PASS_MAX_DAYS	30
PASS_MIN_DAYS	2
PASS_WARN_AGE	7
(...)


File 2 : common-password
# sudo apt install libpam-pwquality -y (install the libpam-pwquality)
# vim /etc/pam.d/common-password (edit file common-password)

In the session of Primary block

[Proj Request] : Your password must be at least 10 characters long.
# minlen=10

[Proj Request] : It must contain an uppercase letter, a lowercase letter, and a number.
# ucredit=-1
# dcredit=-1
# lcredit=-1

[Proj Request] : Also, it must not contain more than 3 consecutive identical characters.
# maxrepeat=3

The password must not include the name of the user.
# reject_username

The following rule does not apply to the root password: The password must have
at least 7 characters that are not part of the former password.
# difok=7 

Of course, your root password has to comply with this policy
# enforce_for_root

## File 2 : common-password

(...)
# here are the per-package modules (the "Primary" block)
password	requisite			pam_pwquality.so retry=3 minlen=10 ucredit=-1 dcredit=-1 lcredit=-1 maxrepeat=3 reject_username difok=7 enforce_for_root
(...)


After all, the password of user and root must be changed according to new rules

Change Password
# passwd mchamma (new password Cebolinha42)
# passwd root (new password Franjinha42)
