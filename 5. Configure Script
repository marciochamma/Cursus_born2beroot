Script

Create and Edit file : monitoring.sh
# vim /monitoring.sh

Information that must be displayed

[Proj Request] : The architecture of your operating system and its kernel version.
# uname --all

[Proj Request] : The number of physical processors
(the qty of physical id is set by line, not by qty write in the file cpu info)
# grep "physical id" /proc/cpuinfo | wc -l

[Proj Request] : The number of virtual processors
# grep processor /proc/cpuinfo | wc -l

[Proj Request] : The current available RAM on your server and its utilization rate as a percentage.
# free --mega | awk '$1 == "Mem:" {print $3}' (to get available ram)
# free --mega | awk '$1 == "Mem:" {print $2}' (to get total ram)
# free --mega | awk '$1 == "Mem:" {printf("(%.2f%)", $3/$2*100)}'

[Proj Request] : The current available memory on your server and its utilization rate as a percentage.
# df -m | grep "/dev/" | grep -v "/boot" | awk '{used += $3} END {print used}'
# df -m | grep "/dev/" | grep -v "/boot" | awk '{total += $2} END {printf("%d", total / 1024)}'
# df -m | grep "/dev/" | grep -v "/boot" | awk '{used += $3} {total += $2} END {printf("%d", used/total*100)}'

[Proj Request] : The current utilization rate of your processors as a percentage.
# top -bn1 | grep '^%Cpu' | cut -c 9- | xargs | awk '{printf("%.1f%%"), $1 + $3}'

[Proj Request] : The date and time of the last reboot.
# uptime --since

[Proj Request] : Whether LVM is active or not.
# if [ $(lsblk | grep lvm | wc -l) -eq 0 ]; then echo no; else echo yes; fi

[Proj Request] : The number of active connections.
# ss -ta | grep ESTAB | wc -l

[Proj Request] : The number of users using the server.
# users | wc -w

[Proj Request] : The IPv4 address of your server and its MAC (Media Access Control) address.
# hostname -I
# ip link | awk '$1 == "link/ether" {print $2}'

[Proj Request] : The number of commands executed with the sudo program.
# journalctl _COMM=sudo | grep COMMAND | wc -l

Check file monitoring.sh


Create and Edit file : sleep.sh
# vim /sleep.sh

## File : sleep.sh

#!/bin/bash                                                                     
minute=$(who -b | grep -o '.$')
timer=$(($minute * 60))
sleep $timer
sh /monitoring.sh


Crontab

Start Crontab
# sudo crontab -u root -e (select-edit : 2 (vim))

Edit Crontab
# sudo crontab -e
At the end of file add: */10 * * * * sh /sleep.sh (each 10 min will execute sleep.sh)
# sudo reboot (refreh and set correctly the cron)


